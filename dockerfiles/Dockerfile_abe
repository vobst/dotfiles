FROM docker.io/debian:bookworm

ENV LANG en_US.utf8
ENV TZ=Europe/Berlin

RUN set -eu							&& \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime 		&& \
    echo $TZ > /etc/timezone 					&& \
    apt-get update 						&& \
    apt-get upgrade -yq 					&& \
    apt-get install -yq --no-install-recommends			\
	locales 						&& \
    localedef -i en_US -c -f UTF-8 				\
    	-A /usr/share/locale/locale.alias en_US.UTF-8

RUN set -eu							&& \
    apt-get update 						&& \
    apt-get upgrade -yq 					&& \
    apt-get install -yq --no-install-recommends			\
    	apt-utils						\
	build-essential						\
	ca-certificates						\
	curl							\
	clang							\
	elfutils						\
	gcc							\
	gcc-multilib						\
	gdb-multiarch						\
	gdbserver						\
	git							\
	glibc-source						\
	jq							\
	libc6-dev						\
	libc6-dbg						\
	libgmp-dev						\
	llvm							\
	ltrace							\
	locales							\
	nasm							\
	procps							\
	python3							\
	python3-dev						\
	python3-pip						\
	ripgrep							\
	sudo							\
	strace							\
	texinfo							\
	tmux							\
	tree							\
	vim							\
	wget							\
	z3							\
	zsh							&& \
    python3 -m pip install --upgrade --no-cache-dir pip 	&& \
    apt-get -y autoremove --purge 				&& \
    ln -s /usr/bin/python3 /usr/bin/python3.11			&& \
    apt-get clean 						&& \
    rm -rf /var/lib/apt/lists/*

WORKDIR /opt/gef
RUN set -eu							&& \
    curl -fsSL https://gef.blah.cat/py				\
        --output /opt/gef/gdbinit-gef.py			&& \
    echo "source ~/.gdbinit_local" > ~/.gdbinit			&& \
    echo "#source /opt/gef/gdbinit-gef.py" >> ~/.gdbinit

WORKDIR /opt
RUN set -eu							&& \
    git clone https://github.com/pwndbg/pwndbg			&& \
    cd /opt/pwndbg						&& \
    ./setup.sh

RUN set -eu							&& \
    pip install							\
        pwntools						\
	keystone-engine						\
	ropper							\
	z3-solver						\
	git+https://github.com/martinclauss/syscall_number.git

RUN set -eu							&& \
    echo "PYTHON_MINOR=$(python3 -c "import sys;print(sys.version_info.minor)")" 	\
      >> /root/.bashrc 						&& \
    echo 'PYTHON_PATH="/usr/local/lib/python3.${PYTHON_MINOR}/dist-packages/bin"' 	\
      >> /root/.bashrc 						&& \
    echo 'export PATH=$PATH:$PYTHON_PATH' >> /root/.bashrc

RUN set -eu							&& \
    apt-mark hold libc6						&& \
    apt-mark hold libc-bin

WORKDIR /io
